include ../.env
export

SHELL := /bin/bash

.ONESHELL:
zip: check-compile
	@set -e;
# 	grep -r std\\.Debug $(SOURCES) && echo "Debug statements found" && exit;
	LAST_TAG=$$(git tag | grep $(TAG_NAME) | tail -1);
	MODIFIED=$$( git diff $$LAST_TAG --quiet $(SOURCES) || echo _MODIFIED);
	NAME=$$(echo $$LAST_TAG | perl -pE 's/^$(TAG_NAME)-/$(MOD_NAME)_/');
	FILENAME=mod_$$([[ "$$NAME" != "" ]] && echo $$NAME || echo $(MOD_NAME))$${MODIFIED}.zip;
	zip --filesync -r "$${FILENAME}" $(SOURCES);

clean:
	@rm -f *_MODIFIED.zip;

install: include check-compile
	@set -e;
	FILENAME=${DATA_DIR}mod_$(MOD_NAME)_TMP.zip;
	zip --filesync -r "$${FILENAME}" $(SOURCES);

check-compile:
	@set -e
	find . -name \*.nut -print0 | xargs -0 -n1 squirrel -c && echo "Syntax OK"
	rm out.cnut

test: check-compile
	@squirrel test.nut;

include:
	@set -e
	for i in $(INCLUDES); do
		for src in `find ../_includes/$$i -type f`; do
			rel_path="$${src#../_includes/$$i/}"
			dst="$$(dirname "$$rel_path")/i_$(MOD_NAME)_$$(basename "$$rel_path")";

			if [[ ! -f "$$dst" || "$src_file" -nt "$$dst" ]]; then
				echo "COPY $$src -> $$dst";
				mkdir -p `dirname $$dst`;
				cp $$src $$dst;
			fi
		done
	done
